on:
  workflow_dispatch:
    inputs:
      entry:
        type: string
        required: true
        description: "entry url to save"

jobs:
  add-entry:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: checkout repo
        uses: actions/checkout@v4
      - name: clean and append entry
        run: |
          clean_url="${{ inputs.entry }}"

          # remove tracking parameters
          clean_url=$(echo "$clean_url" | sed -E 's/[&?]ref=[^&]*//g')
          clean_url=$(echo "$clean_url" | sed -E 's/[&?]utm_[^&]*=[^&]*//g')
          clean_url=$(echo "$clean_url" | sed -E 's/[&?]source=[^&]*//g')
          clean_url=$(echo "$clean_url" | sed -E 's/[&?]medium=[^&]*//g')
          clean_url=$(echo "$clean_url" | sed -E 's/[&?]campaign=[^&]*//g')
          clean_url=$(echo "$clean_url" | sed -E 's/[&?]fbclid=[^&]*//g')
          clean_url=$(echo "$clean_url" | sed -E 's/[&?]gclid=[^&]*//g')
          clean_url=$(echo "$clean_url" | sed -E 's/[&?]_ga=[^&]*//g')
          clean_url=$(echo "$clean_url" | sed -E 's/[&?]_gl=[^&]*//g')

          # clean up any leftover ? or & at the end
          clean_url=$(echo "$clean_url" | sed -E 's/[?&]$//')

          # check if URL already exists in journal
          if grep -q " $clean_url$" journal/journal.txt; then
            echo "entry already exists: $clean_url"
            exit 0
          fi

          # add timestamp to entry
          timestamp=$(date +%s)
          echo "$timestamp $clean_url" >> journal/journal.txt
      - name: commit entry
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git commit -am "automated: add journal entry"
          git push
